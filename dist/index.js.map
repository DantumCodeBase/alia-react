{"version":3,"file":"index.js","sources":["../src/Input/Input.js","../src/Button/Button.js","../src/LineChart/LineChart.js","../src/Barchart/BarChart.js","../src/index.js"],"sourcesContent":["import React from 'react'\n\nimport './Input.scss'\n\nexport const Input = () => {\n  return <input className='alia-input' />\n}\n","import React from 'react'\n\nimport './Button.scss'\n\nexport const Button = ({ type = 'button', children }) => {\n  return <button type={type} className=\"d-button\">{children}</button>\n}\n","import React, { Fragment, useState } from 'react'\nimport './LineChart.scss'\n\nexport const LineChart = (props) => {\n  const { height, width, padding, data, labels } = props\n\n  if (!data) return null\n\n  const initialState2 = {}\n  data.forEach((data, idx) => (initialState2[idx] = true))\n\n  const [visible, setVisible] = useState(initialState2)\n\n  const colors = [\n    '#304e62',\n    '#55bcc8',\n    '#ABABAB',\n    '#304e62',\n    '#55bcc8',\n    '#ABABAB'\n  ]\n  const FONT_SIZE = 12\n\n  const maxX = Math.max(...data.map((d) => Math.max(...d.map((e) => e.x))))\n  const minX = Math.min(...data.map((d) => Math.min(...d.map((e) => e.x))))\n\n  const maxValue = Math.max(...data.map((d) => Math.max(...d.map((e) => e.y)))) * 1.25;\n  console.log(maxValue)\n  const maxZeros = 10 ** (maxValue.toFixed().toString().length - 1)\n  console.log(maxZeros)\n  const maxY = (Math.ceil(maxValue / maxZeros) * maxZeros)\n  console.log(maxY)\n\n  const minValue = Math.min(...data.map((d) => Math.min(...d.map((e) => e.y)))) * 1.25;\n  console.log(minValue)\n  const minZeros = 10 ** (Math.abs(minValue).toFixed().toString().length - 1)\n  console.log(minZeros)\n  const minY = (Math.floor(minValue / minZeros) * minZeros)\n  console.log(minY)\n\n  const points = data.map((singlePlot) =>\n    singlePlot\n      .map((element) => {\n        // Calculate coordinates\n        const x = ((element.x - minX) / (maxX - minX)) * width + padding\n        const y = height - (element.y / Math.abs(maxY - minY)) * height + padding - Math.abs(minY)/ Math.abs(maxY - minY)*height\n        return `${x},${y}`\n      })\n      .join(' ')\n  )\n\n  const Axis = ({ points }) => (\n    <polyline\n      fill='solid'\n      stroke='#EDEDED'\n      strokeWidth='2'\n      points={points}\n      strokeLinecap='round'\n    />\n  )\n\n  const XAxis = () => (\n    <Axis points={`${padding},${height + 5} ${width},${height + 5}`} />\n  )\n\n  const HorizontalGuides = () => {\n    const startX = padding\n    const endX = width\n    const numberOfHorizontalGuides = 5\n\n    return new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\n      const yRatio = Math.abs(maxY-minY) / numberOfHorizontalGuides\n      const ratio = (index + 1) / numberOfHorizontalGuides\n\n      const yCoordinate = height - height * ratio + padding\n      console.log(yRatio, maxY, minY)\n      return (\n        <Fragment key={index}>\n          <text\n            key={`${index}-text`}\n            x={startX}\n            y={yCoordinate - 5}\n            style={{\n              fontSize: 14,\n              fontFamily: 'Nunito',\n              fill: colors[2],\n              fontWeight: 'bold'\n            }}\n          >\n            {(index * yRatio + yRatio + minY ).toPrecision(4)} KW\n          </text>\n          <polyline\n            key={index}\n            fill='none'\n            stroke='#ccc'\n            strokeDasharray='5 5'\n            strokeLinecap='round'\n            strokeWidth='1'\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </Fragment>\n      )\n    })\n  }\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2 - Math.abs(minY)/Math.abs(maxY-minY)*height\n\n    return data[0].map((element, index) => {\n      const x =\n        ((element.x - minX) / (maxX - minX)) * width + 10 - FONT_SIZE / 2\n\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y}\n          dominantBaseline='central'\n          textAnchor='start'\n          transform={`rotate(45, ${x}, ${y})`}\n          style={{\n            fill: '#ccc',\n            fontSize: FONT_SIZE,\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {element.label}\n        </text>\n      )\n    })\n  }\n  // const YAxis = () => (\n  //   <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  // )\n\n  const handleVisible = (idx) => {\n    setVisible((prevState) => {\n      const newState = { ...prevState }\n      newState[idx] = !newState[idx]\n      return newState\n    })\n  }\n\n  return (\n    <>\n      <div className='phase' style={{ float: 'right', marginBottom: '15px' }}>\n        {points.map((points, idx) => (\n          <a\n            key={idx}\n            style={{ color: colors[idx], opacity: visible[idx] ? 1 : 0.5 }}\n            onClick={(e) => handleVisible(idx)}\n          >\n            {labels[idx]}\n          </a>\n        ))}\n      </div>\n      <svg viewBox={`0 0 ${width} ${height + 100}`}>\n        <style>{`.small {color: 'red'} `}</style>\n\n        <XAxis />\n        <LabelsXAxis />\n        {/* <YAxis /> */}\n        <HorizontalGuides />\n        {points.map((points, idx) => {\n          if (visible[idx]) {\n            return (\n              <polyline\n                key={idx}\n                fill='none'\n                stroke={colors[idx]}\n                strokeWidth='3px'\n                strokeLinecap='round'\n                strokeDasharray='10 5'\n                points={points}\n              />\n            )\n          }\n        })}\n      </svg>\n    </>\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport './BarChart.scss'\n\nexport const BarChart = (props) => {\n  const { height, width, padding, data } = props\n\n  if (!data) return null\n\n  const initialState2 = {}\n  for (const key in data.data) {\n    initialState2[key] = true\n  }\n\n  const [visible, setVisible] = useState(initialState2)\n  // console.log(visible)\n  const colors = ['#55BDC8', '#304e62', '#ABABAB']\n  const FONT_SIZE = 12\n\n  const maxValue = Math.max(...[].concat(...Object.values(data.data)))\n  const zeros = 10 ** (maxValue.toFixed().toString().length - 1)\n  let maxY = (Math.ceil(maxValue / zeros) * zeros)\n\n  if (maxY < 1) {\n    maxY = 1\n  }\n\n  const xValues = Math.max(\n    ...Object.keys(data.data).map((key, idx) => data.data[key].length)\n  )\n\n  const deltaX = (width - 50) / xValues\n  // console.log(deltaX)\n  // console.log(maxY)\n  // generate [[[[x,y], [x,y]],[xy, xy]], []]\n  const points = Object.values(data.data).map((series) => {\n    return series.map((point, idx) => [\n      50 + deltaX * idx + 8,\n      height - (point / maxY) * height\n    ])\n  })\n\n  const Axis = ({ points }) => (\n    <polyline\n      fill='solid'\n      stroke='#EDEDED'\n      strokeWidth='2'\n      points={points}\n      strokeLinecap='round'\n    />\n  )\n\n  const XAxis = () => (\n    <Axis points={`${padding},${height + 36} ${width},${height + 36}`} />\n  )\n\n  const HorizontalGuides = () => {\n    const startX = padding\n    const endX = width\n    const numberOfHorizontalGuides = 5\n\n    return new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\n      const yRatio = maxY / numberOfHorizontalGuides\n      const ratio = (index + 1) / numberOfHorizontalGuides\n\n      const yCoordinate = height - height * ratio + padding + 20\n\n      return (\n        <Fragment key={index}>\n          <text\n            key={`${index}-text`}\n            x={startX}\n            y={yCoordinate - 5}\n            style={{\n              fontSize: 10,\n              fontFamily: 'Nunito',\n              fill: colors[2]\n            }}\n          >\n            {(index * yRatio + yRatio).toFixed(2)} kWh\n          </text>\n          <polyline\n            key={index}\n            fill='none'\n            stroke='#EDEDED'\n            strokeDasharray='3 3'\n            strokeLinecap='round'\n            strokeWidth='1'\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </Fragment>\n      )\n    })\n  }\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2\n\n    return data.labels.map((element, index) => {\n      const x =\n        ((index - 0) / (12.7 - 0)) * width + 65 - FONT_SIZE / 2\n\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y + 28}\n          style={{\n            fill: '#ccc',\n            fontSize: FONT_SIZE,\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {element}\n        </text>\n      )\n    })\n  }\n  // const YAxis = () => (\n  //   <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  // )\n\n  const handleVisible = (idx) => {\n    setVisible((prevState) => {\n      const newState = { ...prevState }\n      newState[idx] = !newState[idx]\n      return newState\n    })\n  }\n\n  return (\n    <>\n      <div className='phase' style={{ float: 'right', marginBottom: '15px' }}>\n        {Object.keys(data.data).map((key, idx) => (\n          <a\n            key={idx}\n            style={{ color: colors[idx], opacity: visible[key] ? 1 : 0.5 }}\n            onClick={(e) => handleVisible(key)}\n          >\n            {key}\n          </a>\n        ))}\n      </div>\n      <svg viewBox={`0 0 ${width} ${height + 60}`}>\n        <style>{`.small {color: 'red'} `}</style>\n\n        <XAxis />\n        <LabelsXAxis />\n        {/* <YAxis /> */}\n        <HorizontalGuides />\n        {points.map((series, idx) => {\n          if (visible[Object.keys(data.data)[idx]]) {\n            return series.map((point, idxline) => {\n              // <polyline\n              //   key={idx}\n              //   fill='none'\n              //   stroke={colors[idx]}\n              //   strokeWidth='3px'\n              //   strokeLinecap='round'\n              //   strokeDasharray='10 5'\n              //   points={points}\n              // />\n              return (\n                <line\n                  key={idxline}\n                  x1={point[0] + idx * 14}\n                  y1={point[1] + 25}\n                  x2={point[0] + idx * 14}\n                  y2={height + 25}\n                  stroke={colors[idx]}\n                  strokeWidth='9.5'\n                  strokeLinecap='round'\n                />\n              )\n            })\n          }\n          return null\n        })}\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport styles from './styles.module.css'\n// import Input from './Input'\n\n// Components\nexport { Input } from './Input'\nexport { Button } from './Button'\nexport { LineChart } from './LineChart'\nexport { BarChart } from './Barchart'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\n// export const Input = () => <div>Hola</div>\n"],"names":["Input","React","Button","type","children","LineChart","props","height","width","padding","data","labels","initialState2","forEach","idx","useState","visible","setVisible","colors","FONT_SIZE","maxX","Math","max","map","d","e","x","minX","min","maxValue","y","console","log","maxZeros","toFixed","toString","length","maxY","ceil","minValue","minZeros","abs","minY","floor","points","singlePlot","element","join","Axis","XAxis","HorizontalGuides","startX","endX","numberOfHorizontalGuides","Array","fill","_","index","yRatio","ratio","yCoordinate","Fragment","fontSize","fontFamily","fontWeight","toPrecision","LabelsXAxis","label","handleVisible","prevState","newState","marginBottom","color","opacity","BarChart","key","concat","Object","values","zeros","xValues","keys","deltaX","series","point","idxline","ExampleComponent","text","styles","test"],"mappings":"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"}