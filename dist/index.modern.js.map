{"version":3,"file":"index.modern.js","sources":["../src/Input/Input.js","../src/Button/Button.js","../src/LineChart/LineChart.js","../src/Barchart/BarChart.js","../src/index.js"],"sourcesContent":["import React from 'react'\n\nimport './Input.scss'\n\nexport const Input = () => {\n  return <input className='alia-input' />\n}\n","import React from 'react'\n\nimport './Button.scss'\n\nexport const Button = ({ type = 'button', children }) => {\n  return <button type={type} className=\"d-button\">{children}</button>\n}\n","import React, { Fragment, useState, useRef } from 'react'\nimport Tooltip from '../Tooltip'\nimport './LineChart.scss'\n\nexport const LineChart = ({ height, width, padding, data, labels, hourly=true }) => {\n  const [tooltipVisible, setTooltipVisible] = useState(null)\n  const [currentX, setCurrentX] = useState(0)\n  const div = useRef();\n\n  if (!data) return null\n\n  const initialState2 = {}\n  data.forEach((data, idx) => (initialState2[idx] = true))\n\n  const [visible, setVisible] = useState(initialState2)\n\n  const colors = [\n    '#55bcc8',\n    '#304e62',\n    '#ABABAB',\n    '#304e62',\n    '#55bcc8',\n    '#ABABAB'\n  ]\n\n  const colorsFill = [\n    '#55bcc8',\n    '#304e62',\n    '#ABABAB',\n    '#304e62',\n    '#55bcc8',\n    '#ABABAB'\n  ]\n  const FONT_SIZE = 12\n\n  const maxX = Math.max(...data.map((d) => Math.max(...d.map((e) => e.x))))\n  const minX = Math.min(...data.map((d) => Math.min(...d.map((e) => e.x))))\n\n  const maxValue = Math.max(...data.map((d) => Math.max(...d.map((e) => e.y)))) * 1.25;\n  const maxZeros = 10 ** (maxValue.toFixed().toString().length - 1)\n  const maxY = (Math.ceil(maxValue / maxZeros) * maxZeros) || 5\n\n  const minValue = Math.min(...data.map((d) => Math.min(...d.map((e) => e.y)))) * 1.25;\n  const minZeros = 10 ** (Math.abs(minValue).toFixed().toString().length - 1)\n  let minY = (Math.floor(minValue / minZeros) * minZeros)\n\n  let zeroY = 200\n\n  if(minY < 0){\n    zeroY = height + padding - Math.abs(minY) / Math.abs(maxY - minY)*height || 200;\n  }\n\n\n\n  if (minY > 0) {\n    minY = 0\n  }\n\n\n  const points = data.map((singlePlot) =>\n    singlePlot\n      .map((element) => {\n        // Calculate coordinates\n        const x = ((element.x - minX) / (maxX - minX)) * width + padding\n        const y = height - (element.y / Math.abs(maxY - minY)) * height + padding - Math.abs(minY)/ Math.abs(maxY - minY)*height \n        return `${x},${y}`\n      })\n      .join(' ')\n  )\n\n  \n  const polygonPoints = data.map((singlePlot) =>\n    (`0,${200} ` +  singlePlot\n      .map((element) => {\n        // Calculate coordinates\n        const x = ((element.x - minX) / (maxX - minX)) * width + padding\n        const y = height - (element.y / Math.abs(maxY - minY)) * height + padding - Math.abs(minY)/ Math.abs(maxY - minY)*height\n        return `${x},${y}`\n      })\n      .join(' ') + ` ${width},${200}`) \n  )\n\n\n  const pointsCoords = data.map((singlePlot, idx) =>\n    singlePlot\n      .map((element) => {\n        // Calculate coordinates\n        const x = ((element.x - minX) / (maxX - minX)) * width + padding\n        const y = height - (element.y / Math.abs(maxY - minY)) * height + padding - Math.abs(minY)/ Math.abs(maxY - minY)*height \n        \n        return [x, y, element.y, idx, element.label]\n      })\n  )\n\n  const xPointCoords = data.map((singlePlot, idx)=>\n      singlePlot.map( element => {\n        const x = ((element.x - minX) / (maxX - minX)) * width + padding\n        return x\n      })\n  )\n  \n  const VerticalCurrentX = ({ x, stroke='#a0a0a0' }) => {\n    return (\n      <line\n        x1={x}\n        y1='0'\n        x2={x}\n        y2={height}\n        fill='solid'\n        stroke={stroke}\n        strokeDasharray='5 5'\n        strokeLinecap='round'\n        strokeWidth='2'\n        // style=\"stroke:rgb(255,0,0);stroke-width:2\" \n      />\n    )\n  }\n\n  const Axis = ({ points, stroke='#EDEDED' }) => (\n    <polyline\n      fill='solid'\n      stroke={stroke}\n      strokeWidth='1'\n      points={points}\n      strokeLinecap='round'\n    />\n  )\n\n  const XAxis = () => {\n    return (<Axis stroke='#a0a0a0' strokeLinecap='round' points={`${padding},${zeroY} ${width},${zeroY}`} />);\n  }\n\n\n\n  const HorizontalGuides = () => {\n    const startX = padding\n    const endX = width\n    const numberOfHorizontalGuides = 5\n\n    return new Array(numberOfHorizontalGuides -1).fill(0).map((_, index) => {\n      const yRatio = Math.abs(maxY-minY) / numberOfHorizontalGuides\n      const ratio = (index + 1) / numberOfHorizontalGuides\n      const displayNumber = index * yRatio + yRatio + minY;\n      const yCoordinate = height - height * ratio + padding\n\n      return (\n        <Fragment key={index}>\n          <text\n            key={`${index}-text`}\n            x={startX}\n            y={ displayNumber>=0 ? (yCoordinate - 5) : (yCoordinate + 15) }\n            style={{\n              fontSize: 14,\n              fontFamily: 'Nunito',\n              fill: colors[2],\n              fontWeight: 'bold'\n            }}\n          >\n            {(index * yRatio + yRatio + minY ).toPrecision(4)} KW\n          </text>\n          <polyline\n            key={index}\n            fill='none'\n            stroke='#e0e0e0'\n            strokeDasharray='1 5'\n            strokeLinecap='round'\n            strokeWidth='1'\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </Fragment>\n      )\n    })\n  }\n\n\n  const labelsXAxisHourly = () => {\n    const hours = []\n\n    let lastHour = null\n    let lastHalf = null\n    let lastX = 0\n    for(let element of data[0]){\n      const currentHour = element.label.split(':')[0]\n      const currentHalf = (element.label.split(':')[1] > 20 && element.label.split(':')[1] < 40) ? 30 : null\n      if(lastHour != currentHour){\n        hours.push([lastX, `${lastHour}:${lastHalf ? '30':'00'}`])\n        lastHour = currentHour\n        lastHalf = currentHalf\n        lastX = element.x\n      } \n\n\n    }\n  \n    return hours.slice(1)\n  }\n\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2 - Math.abs(minY)/Math.abs(maxY-minY)*height || 224;\n\n\n    if(hourly){\n        const labelsPerHour = labelsXAxisHourly()\n        return labelsPerHour.map((element, index) => {\n            const x =\n            ((element[0] - minX) / (maxX - minX)) * width + 10 - FONT_SIZE / 2\n    \n          return (\n            <text\n              key={index}\n              x={x}\n              y={y - 20}\n              dominantBaseline='central'\n              textAnchor='start'\n              transform={`rotate(45, ${x}, ${y})`}\n              style={{\n                fill: '#a0a0a0',\n                fontSize: FONT_SIZE,\n                fontWeight: 'bold',\n                fontFamily: 'Nunito'\n              }}\n            >\n              {element[1]}\n            </text>\n          )\n          })\n    }\n\n    return data[0].map((element, index) => {\n      const x =\n        ((element.x - minX) / (maxX - minX)) * width + 10 - FONT_SIZE / 2\n\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y - 20}\n          dominantBaseline='central'\n          textAnchor='start'\n          transform={`rotate(45, ${x}, ${y})`}\n          style={{\n            fill: '#a0a0a0',\n            fontSize: FONT_SIZE,\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {element.label}\n        </text>\n      )\n    })\n  }\n  // const YAxis = () => (\n  //   <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  // )\n\n  const handleVisible = (idx) => {\n    setVisible((prevState) => {\n      const newState = { ...prevState }\n      newState[idx] = !newState[idx]\n      return newState\n    })\n  }\n\n\n\n  const Mark = ({coord, idx, onMouseOver, onMouseLeave, color=\"red\"}) => {\n    return (\n     <g key={`dot-${idx}`} pointerEvents='all'>\n        <circle\n          key={`circle-${idx}`}\n          cx={coord[0]}\n          cy={coord[1]}\n          r='5'\n          fill={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          }\n        />\n        <circle\n          key={`circlecontour-${idx}`}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n          cx={coord[0]}\n          cy={coord[1]}\n          r='10'\n          fill='none'\n          strokeWidth='2'\n          stroke={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          }\n        />\n        <polygon \n          fill={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          } \n          points={`${coord[0] + 15} ${coord[1] - 5}, ${coord[0] + 20} ${coord[1] + 0}, ${coord[0] + 15} ${coord[1]+5}`} />\n          <polygon \n          fill={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          } \n          points={`${coord[0] - 15} ${coord[1] - 5}, ${coord[0] - 20} ${coord[1] + 0}, ${coord[0] - 15} ${coord[1]+5}`} />\n      </g>\n      )\n  }\n\n\n  const Tooltips = ({x=500,y=70, label=\"545.245 MW\", sublabel=\"3:24:02\"}) => {\n\n    const rectPos = [x-35, y - 40]\n\n    const height = 25\n    const width = 50\n\n    return (<>\n      <rect x={rectPos[0]} y={rectPos[1]} width={width + label.length*4} height={height} rx=\"15\" fill=\"#c0c0c0\">\n      </rect>\n      <text\n        x={rectPos[0] + (width - label.length)/3}\n        y={rectPos[1] + height/2}\n        style={{\n          fill: 'white',\n          fontSize: '0.7rem',\n          fontWeight: 'bold',\n          fontFamily: 'Nunito'\n        }}>\n          {label}\n      </text>\n      <text\n        x={rectPos[0] + (width - label.length)/3}\n        y={rectPos[1] + height/2 + 10}\n        style={{\n          fill: 'white',\n          fontSize: '0.6rem',\n          fontWeight: 'bold',\n          fontFamily: 'Nunito'\n        }}>\n          {sublabel}\n      </text>\n\n      </>\n    )\n  }\n\n\n  return (\n    <>\n      <div  className='phase' style={{ float: 'right', marginBottom: '15px'}\n    }\n      >\n        {points.map((points, idx) => (\n          <a\n            key={idx}\n            style={{ color: colors[idx], opacity: visible[idx] ? 1 : 0.5 }}\n            onClick={(e) => handleVisible(idx)}\n          >\n            {labels[idx]}\n          </a>\n        ))}\n      </div>\n      <svg \n        id='graphcontainer'\n        viewBox={`0 0 ${width} ${height + 100}`}\n        onMouseMove={(event) => {\n          // console.log(event.clientX - bounds.x)\n          const rect = document.getElementById('graphcontainer').getBoundingClientRect();\n          const coordX = (event.clientX-rect.x)/rect.width * width\n          // console.log(coordX)\n          // console.log(xPointCoords[0])\n\n\n          \n          let curr = xPointCoords[0][0]\n          let idx = 0\n          // Find the closest \n          for(let x of xPointCoords[0]){\n            if(Math.abs(x - coordX) < Math.abs(curr - coordX)) {\n              curr = x\n            }\n            idx++;\n          }\n\n          const coord = pointsCoords.map(coords => coords.filter((coord)=> coord[0]===curr))[0][0]\n          setCurrentX(curr)\n          setTooltipVisible(`${coord[0]}-${coord[3]}`)\n        }}\n      >\n        <style>{`.small {color: 'red'} .linear {backgroundColor:'blue'}`}</style>\n        <defs>\n          <linearGradient\n            id='three_opacity'\n            gradientTransform='rotate(90)'\n          >\n            <stop offset=\"0%\" stopColor={colorsFill[0]} stopOpacity=\"0.6\" />\n            <stop offset=\"50%\" stopColor={colorsFill[0]} stopOpacity=\"0.1\" />\n            <stop offset=\"100%\" stopColor={colorsFill[0]} stopOpacity=\"0.0\" />\n          </linearGradient>\n        </defs>\n        {currentX && <VerticalCurrentX x={currentX} />}\n\n        <XAxis />\n        <LabelsXAxis />\n\n        {/* <YAxis /> */}\n        <HorizontalGuides />\n\n        {polygonPoints.map((points, idx) => {\n          if (visible[idx]) {\n            return (\n               <polygon key={idx} points={points} fill={`url('#three_opacity')`}/>\n            )\n          }\n        })}\n        {points.map((points, idx) => {\n          if (visible[idx]) {\n            return (\n              <polyline\n                key={idx}\n                fill='none'\n                stroke={colors[idx]}\n                strokeWidth='3px'\n                strokeLinecap='round'\n                strokeDasharray='1'\n                points={points}\n              />\n            )\n          }\n        })}\n\n\n        {pointsCoords.map((coords, idxParent) => {\n          if (visible[idxParent]) {\n            return coords.map((coord, idx) => {\n              return (\n                  <Mark\n                    key={idx}\n                    coord={coord}\n                    idx={idx}\n                    color={colors[idxParent]}\n                    // onMouseOver={() =>\n                    //   setTooltipVisible(`${coord[0]}-${coord[3]}`)\n                    // }\n                    // onMouseLeave={() => {\n                    //   setTooltipVisible(null)\n                    // }}\n                  />\n              )\n            }\n            )\n          }\n\n        })}     \n        \n        \n        {pointsCoords.map((coords, idx) => {\n            if (visible[idx]) {\n              return coords.map((coord, idx)=> {\n                const quantity = coord[2].toFixed(2)\n                return (\n                   tooltipVisible == `${coord[0]}-${coord[3]}` && \n                    <Tooltips key={idx} x={coord[0]} y={coord[1]} label={`${quantity} kW`} sublabel={coord[4]}>\n                    </Tooltips>\n                )\n              }\n              )\n            }\n          })} \n\n      </svg>\n\n      \n    </>\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport './BarChart.scss'\n\nexport const BarChart = (props) => {\n  const { height, width, padding, data } = props\n\n  if (!data) return null\n\n  const initialState2 = {}\n  for (const key in data.data) {\n    initialState2[key] = true\n  }\n\n  const [visible, setVisible] = useState(initialState2)\n  // console.log(visible)\n  const colors = ['#55BDC8', '#304e62', '#ABABAB']\n  const FONT_SIZE = 12\n\n  const maxValue = Math.max(...[].concat(...Object.values(data.data)))\n  const zeros = 10 ** (maxValue.toFixed().toString().length - 1)\n  let maxY = (Math.ceil(maxValue / zeros) * zeros)\n\n  if (maxY < 1) {\n    maxY = 1\n  }\n\n  const xValues = Math.max(\n    ...Object.keys(data.data).map((key, idx) => data.data[key].length)\n  )\n\n  const deltaX = (width - 50) / xValues\n  // console.log(deltaX)\n  // console.log(maxY)\n  // generate [[[[x,y], [x,y]],[xy, xy]], []]\n  const points = Object.values(data.data).map((series) => {\n    return series.map((point, idx) => [\n      50 + deltaX * idx + 8,\n      height - (point / maxY) * height\n    ])\n  })\n\n  const Axis = ({ points }) => (\n    <polyline\n      fill='solid'\n      stroke='#EDEDED'\n      strokeWidth='2'\n      points={points}\n      strokeLinecap='round'\n    />\n  )\n\n  const XAxis = () => (\n    <Axis points={`${padding},${height + 36} ${width},${height + 36}`} />\n  )\n\n  const HorizontalGuides = () => {\n    const startX = padding\n    const endX = width\n    const numberOfHorizontalGuides = 5\n\n    return new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\n      const yRatio = maxY / numberOfHorizontalGuides\n      const ratio = (index + 1) / numberOfHorizontalGuides\n\n      const yCoordinate = height - height * ratio + padding + 20\n\n      return (\n        <Fragment key={index}>\n          <text\n            key={`${index}-text`}\n            x={startX}\n            y={yCoordinate - 5}\n            style={{\n              fontSize: 10,\n              fontFamily: 'Nunito',\n              fill: colors[2]\n            }}\n          >\n            {(index * yRatio + yRatio).toFixed(2)} kWh\n          </text>\n          <polyline\n            key={index}\n            fill='none'\n            stroke='#EDEDED'\n            strokeDasharray='3 3'\n            strokeLinecap='round'\n            strokeWidth='1'\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </Fragment>\n      )\n    })\n  }\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2\n\n    return data.labels.map((element, index) => {\n      const x =\n        ((index - 0) / (12.7 - 0)) * width + 65 - FONT_SIZE / 2\n\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y + 28}\n          style={{\n            fill: '#ccc',\n            fontSize: FONT_SIZE,\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {element}\n        </text>\n      )\n    })\n  }\n  // const YAxis = () => (\n  //   <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  // )\n\n  const handleVisible = (idx) => {\n    setVisible((prevState) => {\n      const newState = { ...prevState }\n      newState[idx] = !newState[idx]\n      return newState\n    })\n  }\n\n  return (\n    <>\n      <div className='phase' style={{ float: 'right', marginBottom: '15px' }}>\n        {Object.keys(data.data).map((key, idx) => (\n          <a\n            key={idx}\n            style={{ color: colors[idx], opacity: visible[key] ? 1 : 0.5 }}\n            onClick={(e) => handleVisible(key)}\n          >\n            {key}\n          </a>\n        ))}\n      </div>\n      <svg viewBox={`0 0 ${width} ${height + 60}`}>\n        <style>{`.small {color: 'red'} `}</style>\n\n        <XAxis />\n        <LabelsXAxis />\n        {/* <YAxis /> */}\n        <HorizontalGuides />\n        {points.map((series, idx) => {\n          if (visible[Object.keys(data.data)[idx]]) {\n            return series.map((point, idxline) => {\n              // <polyline\n              //   key={idx}\n              //   fill='none'\n              //   stroke={colors[idx]}\n              //   strokeWidth='3px'\n              //   strokeLinecap='round'\n              //   strokeDasharray='10 5'\n              //   points={points}\n              // />\n              return (\n                <line\n                  key={idxline}\n                  x1={point[0] + idx * 14}\n                  y1={point[1] + 25}\n                  x2={point[0] + idx * 14}\n                  y2={height + 25}\n                  stroke={colors[idx]}\n                  strokeWidth='9.5'\n                  strokeLinecap='round'\n                />\n              )\n            })\n          }\n          return null\n        })}\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport styles from './styles.module.css'\n// import Input from './Input'\n\n// Components\nexport { Input } from './Input'\nexport { Button } from './Button'\nexport { LineChart } from './LineChart'\nexport { BarChart } from './Barchart'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\n// export const Input = () => <div>Hola</div>\n"],"names":["Input","Button","type","children","LineChart","height","width","padding","data","labels","hourly","tooltipVisible","setTooltipVisible","useState","currentX","setCurrentX","div","useRef","initialState2","forEach","idx","visible","setVisible","colors","colorsFill","FONT_SIZE","maxX","Math","max","map","d","e","x","minX","min","maxValue","y","maxZeros","toFixed","toString","length","maxY","ceil","minValue","minZeros","abs","minY","floor","zeroY","points","singlePlot","element","join","polygonPoints","pointsCoords","label","xPointCoords","VerticalCurrentX","stroke","Axis","XAxis","HorizontalGuides","startX","endX","numberOfHorizontalGuides","Array","fill","_","index","yRatio","ratio","displayNumber","yCoordinate","fontSize","fontFamily","fontWeight","toPrecision","labelsXAxisHourly","hours","lastHour","lastHalf","lastX","currentHour","split","currentHalf","push","slice","LabelsXAxis","labelsPerHour","handleVisible","prevState","newState","Mark","coord","onMouseOver","onMouseLeave","color","Tooltips","sublabel","rectPos","float","marginBottom","opacity","event","rect","document","getElementById","getBoundingClientRect","coordX","clientX","curr","coords","filter","idxParent","quantity","BarChart","props","key","concat","Object","values","zeros","xValues","keys","deltaX","series","point","idxline","ExampleComponent","text","styles","test"],"mappings":"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"}