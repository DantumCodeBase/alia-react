{"version":3,"file":"index.modern.js","sources":["../src/Input/Input.js","../src/Button/Button.js","../src/LineChart/LineChart.js","../src/Barchart/BarChart.js","../src/index.js"],"sourcesContent":["import React from 'react'\n\nimport './Input.scss'\n\nexport const Input = () => {\n  return <input className='alia-input' />\n}\n","import React from 'react'\n\nimport './Button.scss'\n\nexport const Button = ({ type = 'button', children }) => {\n  return <button type={type} className=\"d-button\">{children}</button>\n}\n","import React, { Fragment, useState, useRef } from 'react'\nimport Tooltip from '../Tooltip'\nimport './LineChart.scss'\n\nexport const LineChart = ({\n  height,\n  width,\n  padding,\n  data,\n  labels,\n  hourly = true\n}) => {\n  const [tooltipVisible, setTooltipVisible] = useState(null)\n  const [currentX, setCurrentX] = useState(0)\n  const div = useRef()\n\n  if (!data) return null\n\n  const initialState2 = {}\n  data.forEach((data, idx) => (initialState2[idx] = true))\n\n  const [visible, setVisible] = useState(initialState2)\n\n  const colors = [\n    '#55bcc8',\n    '#304e62',\n    '#ABABAB',\n    '#304e62',\n    '#55bcc8',\n    '#ABABAB'\n  ]\n\n  const colorsFill = [\n    '#55bcc8',\n    '#304e62',\n    '#ABABAB',\n    '#304e62',\n    '#55bcc8',\n    '#ABABAB'\n  ]\n  const FONT_SIZE = 12\n\n  const maxX = Math.max(...data.map((d) => Math.max(...d.map((e) => e.x))))\n  const minX = Math.min(...data.map((d) => Math.min(...d.map((e) => e.x))))\n\n  const maxValue =\n    Math.max(...data.map((d) => Math.max(...d.map((e) => e.y)))) * 1.25\n  const maxZeros = 10 ** (maxValue?.toFixed().toString().length - 1)\n  const maxY = Math.ceil(maxValue / maxZeros) * maxZeros || 5\n\n  const minValue =\n    Math.min(...data.map((d) => Math.min(...d.map((e) => e.y)))) * 1.25\n  const minZeros = 10 ** (Math.abs(minValue)?.toFixed().toString().length - 1)\n  let minY = Math.floor(minValue / minZeros) * minZeros\n\n  let zeroY = 200\n\n  if (minY < 0) {\n    zeroY =\n      height + padding - (Math.abs(minY) / Math.abs(maxY - minY)) * height ||\n      200\n  }\n\n  if (minY > 0) {\n    minY = 0\n  }\n\n  const points = data.map((singlePlot) =>\n    singlePlot\n      .map((element) => {\n        // Calculate coordinates\n        const x = ((element.x - minX) / (maxX - minX)) * width + padding\n        const y =\n          height -\n          (element.y / Math.abs(maxY - minY)) * height +\n          padding -\n          (Math.abs(minY) / Math.abs(maxY - minY)) * height\n        return `${x},${y}`\n      })\n      .join(' ')\n  )\n\n  const polygonPoints = data.map(\n    (singlePlot) =>\n      `0,${200} ` +\n      singlePlot\n        .map((element) => {\n          // Calculate coordinates\n          const x = ((element.x - minX) / (maxX - minX)) * width + padding\n          const y =\n            height -\n            (element.y / Math.abs(maxY - minY)) * height +\n            padding -\n            (Math.abs(minY) / Math.abs(maxY - minY)) * height\n          return `${x},${y}`\n        })\n        .join(' ') +\n      ` ${width},${200}`\n  )\n\n  const pointsCoords = data.map((singlePlot, idx) =>\n    singlePlot.map((element) => {\n      // Calculate coordinates\n      const x = ((element.x - minX) / (maxX - minX)) * width + padding\n      const y =\n        height -\n        (element.y / Math.abs(maxY - minY)) * height +\n        padding -\n        (Math.abs(minY) / Math.abs(maxY - minY)) * height\n\n      return [x, y, element.y, idx, element.label]\n    })\n  )\n\n  const xPointCoords = data.map((singlePlot, idx) =>\n    singlePlot.map((element) => {\n      const x = ((element.x - minX) / (maxX - minX)) * width + padding\n      return x\n    })\n  )\n\n  const VerticalCurrentX = ({ x, stroke = '#a0a0a0' }) => {\n    return (\n      <line\n        x1={x}\n        y1='0'\n        x2={x}\n        y2={height}\n        fill='solid'\n        stroke={stroke}\n        strokeDasharray='5 5'\n        strokeLinecap='round'\n        strokeWidth='2'\n        // style=\"stroke:rgb(255,0,0);stroke-width:2\"\n      />\n    )\n  }\n\n  const Axis = ({ points, stroke = '#EDEDED' }) => (\n    <polyline\n      fill='solid'\n      stroke={stroke}\n      strokeWidth='1'\n      points={points}\n      strokeLinecap='round'\n    />\n  )\n\n  const XAxis = () => {\n    return (\n      <Axis\n        stroke='#a0a0a0'\n        strokeLinecap='round'\n        points={`${padding},${zeroY} ${width},${zeroY}`}\n      />\n    )\n  }\n\n  const HorizontalGuides = () => {\n    const startX = padding\n    const endX = width\n    const numberOfHorizontalGuides = 5\n\n    return new Array(numberOfHorizontalGuides - 1).fill(0).map((_, index) => {\n      const yRatio = Math.abs(maxY - minY) / numberOfHorizontalGuides\n      const ratio = (index + 1) / numberOfHorizontalGuides\n      const displayNumber = index * yRatio + yRatio + minY\n      const yCoordinate = height - height * ratio + padding\n\n      return (\n        <Fragment key={index}>\n          <text\n            key={`${index}-text`}\n            x={startX}\n            y={displayNumber >= 0 ? yCoordinate - 5 : yCoordinate + 15}\n            style={{\n              fontSize: 14,\n              fontFamily: 'Nunito',\n              fill: colors[2],\n              fontWeight: 'bold'\n            }}\n          >\n            {(index * yRatio + yRatio + minY).toPrecision(4)} KW\n          </text>\n          <polyline\n            key={index}\n            fill='none'\n            stroke='#e0e0e0'\n            strokeDasharray='1 5'\n            strokeLinecap='round'\n            strokeWidth='1'\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </Fragment>\n      )\n    })\n  }\n\n  const labelsXAxisHourly = () => {\n    const hours = []\n\n    let lastHour = null\n    let lastHalf = null\n    let lastX = 0\n    for (let element of data[0]) {\n      const currentHour = element.label.split(':')[0]\n      const currentHalf =\n        element.label.split(':')[1] > 20 && element.label.split(':')[1] < 40\n          ? 30\n          : null\n      if (lastHour != currentHour) {\n        hours.push([lastX, `${lastHour}:${lastHalf ? '30' : '00'}`])\n        lastHour = currentHour\n        lastHalf = currentHalf\n        lastX = element.x\n      }\n    }\n\n    return hours.slice(1)\n  }\n\n  const LabelsXAxis = () => {\n    const y =\n      height -\n        padding +\n        FONT_SIZE * 2 -\n        (Math.abs(minY) / Math.abs(maxY - minY)) * height || 224\n\n    if (hourly) {\n      const labelsPerHour = labelsXAxisHourly()\n      return labelsPerHour.map((element, index) => {\n        const x =\n          ((element[0] - minX) / (maxX - minX)) * width + 10 - FONT_SIZE / 2\n\n        return (\n          <text\n            key={index}\n            x={x}\n            y={y - 20}\n            dominantBaseline='central'\n            textAnchor='start'\n            transform={`rotate(45, ${x}, ${y})`}\n            style={{\n              fill: '#a0a0a0',\n              fontSize: FONT_SIZE,\n              fontWeight: 'bold',\n              fontFamily: 'Nunito'\n            }}\n          >\n            {element[1]}\n          </text>\n        )\n      })\n    }\n\n    return data[0].map((element, index) => {\n      const x =\n        ((element.x - minX) / (maxX - minX)) * width + 10 - FONT_SIZE / 2\n\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y - 20}\n          dominantBaseline='central'\n          textAnchor='start'\n          transform={`rotate(45, ${x}, ${y})`}\n          style={{\n            fill: '#a0a0a0',\n            fontSize: FONT_SIZE,\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {element.label}\n        </text>\n      )\n    })\n  }\n  // const YAxis = () => (\n  //   <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  // )\n\n  const handleVisible = (idx) => {\n    setVisible((prevState) => {\n      const newState = { ...prevState }\n      newState[idx] = !newState[idx]\n      return newState\n    })\n  }\n\n  const Mark = ({ coord, idx, onMouseOver, onMouseLeave, color = 'red' }) => {\n    return (\n      <g key={`dot-${idx}`} pointerEvents='all'>\n        <circle\n          key={`circle-${idx}`}\n          cx={coord[0]}\n          cy={coord[1]}\n          r='5'\n          fill={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          }\n        />\n        <circle\n          key={`circlecontour-${idx}`}\n          onMouseOver={onMouseOver}\n          onMouseLeave={onMouseLeave}\n          cx={coord[0]}\n          cy={coord[1]}\n          r='10'\n          fill='none'\n          strokeWidth='2'\n          stroke={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          }\n        />\n        <polygon\n          fill={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          }\n          points={`${coord[0] + 15} ${coord[1] - 5}, ${coord[0] + 20} ${\n            coord[1] + 0\n          }, ${coord[0] + 15} ${coord[1] + 5}`}\n        />\n        <polygon\n          fill={\n            tooltipVisible === `${coord[0]}-${coord[3]}`\n              ? colorsFill[0]\n              : 'none'\n          }\n          points={`${coord[0] - 15} ${coord[1] - 5}, ${coord[0] - 20} ${\n            coord[1] + 0\n          }, ${coord[0] - 15} ${coord[1] + 5}`}\n        />\n      </g>\n    )\n  }\n\n  const Tooltips = ({\n    x = 500,\n    y = 70,\n    label = '545.245 MW',\n    sublabel = '3:24:02'\n  }) => {\n    const rectPos = [x - 35, y - 40]\n\n    const height = 25\n    const width = 50\n\n    return (\n      <>\n        <rect\n          x={rectPos[0]}\n          y={rectPos[1]}\n          width={width + label.length * 4}\n          height={height}\n          rx='15'\n          fill='#c0c0c0'\n        ></rect>\n        <text\n          x={rectPos[0] + (width - label.length) / 3}\n          y={rectPos[1] + height / 2}\n          style={{\n            fill: 'white',\n            fontSize: '0.7rem',\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {label}\n        </text>\n        <text\n          x={rectPos[0] + (width - label.length) / 3}\n          y={rectPos[1] + height / 2 + 10}\n          style={{\n            fill: 'white',\n            fontSize: '0.6rem',\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {sublabel}\n        </text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className='phase' style={{ float: 'right', marginBottom: '15px' }}>\n        {points.map((points, idx) => (\n          <a\n            key={idx}\n            style={{ color: colors[idx], opacity: visible[idx] ? 1 : 0.5 }}\n            onClick={(e) => handleVisible(idx)}\n          >\n            {labels[idx]}\n          </a>\n        ))}\n      </div>\n      <svg\n        id='graphcontainer'\n        viewBox={`0 0 ${width} ${height + 100}`}\n        onMouseMove={(event) => {\n          // console.log(event.clientX - bounds.x)\n          const rect = document\n            .getElementById('graphcontainer')\n            .getBoundingClientRect()\n          const coordX = ((event.clientX - rect.x) / rect.width) * width\n          // console.log(coordX)\n          // console.log(xPointCoords[0])\n\n          let curr = xPointCoords[0][0]\n          let idx = 0\n          // Find the closest\n          for (let x of xPointCoords[0]) {\n            if (Math.abs(x - coordX) < Math.abs(curr - coordX)) {\n              curr = x\n            }\n            idx++\n          }\n\n          const coord = pointsCoords.map((coords) =>\n            coords.filter((coord) => coord[0] === curr)\n          )[0][0]\n          setCurrentX(curr)\n          setTooltipVisible(`${coord[0]}-${coord[3]}`)\n        }}\n      >\n        <style>{`.small {color: 'red'} .linear {backgroundColor:'blue'}`}</style>\n        <defs>\n          <linearGradient id='three_opacity' gradientTransform='rotate(90)'>\n            <stop offset='0%' stopColor={colorsFill[0]} stopOpacity='0.6' />\n            <stop offset='50%' stopColor={colorsFill[0]} stopOpacity='0.1' />\n            <stop offset='100%' stopColor={colorsFill[0]} stopOpacity='0.0' />\n          </linearGradient>\n        </defs>\n        {currentX && <VerticalCurrentX x={currentX} />}\n\n        <XAxis />\n        <LabelsXAxis />\n\n        {/* <YAxis /> */}\n        <HorizontalGuides />\n\n        {polygonPoints.map((points, idx) => {\n          if (visible[idx]) {\n            return (\n              <polygon\n                key={idx}\n                points={points}\n                fill={`url('#three_opacity')`}\n              />\n            )\n          }\n        })}\n        {points.map((points, idx) => {\n          if (visible[idx]) {\n            return (\n              <polyline\n                key={idx}\n                fill='none'\n                stroke={colors[idx]}\n                strokeWidth='3px'\n                strokeLinecap='round'\n                strokeDasharray='1'\n                points={points}\n              />\n            )\n          }\n        })}\n\n        {pointsCoords.map((coords, idxParent) => {\n          if (visible[idxParent]) {\n            return coords.map((coord, idx) => {\n              return (\n                <Mark\n                  key={idx}\n                  coord={coord}\n                  idx={idx}\n                  color={colors[idxParent]}\n                  // onMouseOver={() =>\n                  //   setTooltipVisible(`${coord[0]}-${coord[3]}`)\n                  // }\n                  // onMouseLeave={() => {\n                  //   setTooltipVisible(null)\n                  // }}\n                />\n              )\n            })\n          }\n        })}\n\n        {pointsCoords.map((coords, idx) => {\n          if (visible[idx]) {\n            return coords.map((coord, idx) => {\n              const quantity = coord[2]?.toFixed(2)\n              return (\n                tooltipVisible == `${coord[0]}-${coord[3]}` && (\n                  <Tooltips\n                    key={idx}\n                    x={coord[0]}\n                    y={coord[1]}\n                    label={`${quantity} kW`}\n                    sublabel={coord[4]}\n                  ></Tooltips>\n                )\n              )\n            })\n          }\n        })}\n      </svg>\n    </>\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport './BarChart.scss'\n\nexport const BarChart = (props) => {\n  const { height, width, padding, data } = props\n\n  if (!data) return null\n\n  const initialState2 = {}\n  for (const key in data.data) {\n    initialState2[key] = true\n  }\n\n  const [visible, setVisible] = useState(initialState2)\n  // console.log(visible)\n  const colors = ['#55BDC8', '#304e62', '#ABABAB']\n  const FONT_SIZE = 12\n\n  const maxValue = Math.max(...[].concat(...Object.values(data.data)))\n  const zeros = 10 ** (maxValue.toFixed().toString().length - 1)\n  let maxY = (Math.ceil(maxValue / zeros) * zeros)\n\n  if (maxY < 1) {\n    maxY = 1\n  }\n\n  const xValues = Math.max(\n    ...Object.keys(data.data).map((key, idx) => data.data[key].length)\n  )\n\n  const deltaX = (width - 50) / xValues\n  // console.log(deltaX)\n  // console.log(maxY)\n  // generate [[[[x,y], [x,y]],[xy, xy]], []]\n  const points = Object.values(data.data).map((series) => {\n    return series.map((point, idx) => [\n      50 + deltaX * idx + 8,\n      height - (point / maxY) * height\n    ])\n  })\n\n  const Axis = ({ points }) => (\n    <polyline\n      fill='solid'\n      stroke='#EDEDED'\n      strokeWidth='2'\n      points={points}\n      strokeLinecap='round'\n    />\n  )\n\n  const XAxis = () => (\n    <Axis points={`${padding},${height + 36} ${width},${height + 36}`} />\n  )\n\n  const HorizontalGuides = () => {\n    const startX = padding\n    const endX = width\n    const numberOfHorizontalGuides = 5\n\n    return new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\n      const yRatio = maxY / numberOfHorizontalGuides\n      const ratio = (index + 1) / numberOfHorizontalGuides\n\n      const yCoordinate = height - height * ratio + padding + 20\n\n      return (\n        <Fragment key={index}>\n          <text\n            key={`${index}-text`}\n            x={startX}\n            y={yCoordinate - 5}\n            style={{\n              fontSize: 10,\n              fontFamily: 'Nunito',\n              fill: colors[2]\n            }}\n          >\n            {(index * yRatio + yRatio).toFixed(2)} kWh\n          </text>\n          <polyline\n            key={index}\n            fill='none'\n            stroke='#EDEDED'\n            strokeDasharray='3 3'\n            strokeLinecap='round'\n            strokeWidth='1'\n            points={`${startX},${yCoordinate} ${endX},${yCoordinate}`}\n          />\n        </Fragment>\n      )\n    })\n  }\n\n  const LabelsXAxis = () => {\n    const y = height - padding + FONT_SIZE * 2\n\n    return data.labels.map((element, index) => {\n      const x =\n        ((index - 0) / (12.7 - 0)) * width + 65 - FONT_SIZE / 2\n\n      return (\n        <text\n          key={index}\n          x={x}\n          y={y + 28}\n          style={{\n            fill: '#ccc',\n            fontSize: FONT_SIZE,\n            fontWeight: 'bold',\n            fontFamily: 'Nunito'\n          }}\n        >\n          {element}\n        </text>\n      )\n    })\n  }\n  // const YAxis = () => (\n  //   <Axis points={`${padding},${padding} ${padding},${height - padding}`} />\n  // )\n\n  const handleVisible = (idx) => {\n    setVisible((prevState) => {\n      const newState = { ...prevState }\n      newState[idx] = !newState[idx]\n      return newState\n    })\n  }\n\n  return (\n    <>\n      <div className='phase' style={{ float: 'right', marginBottom: '15px' }}>\n        {Object.keys(data.data).map((key, idx) => (\n          <a\n            key={idx}\n            style={{ color: colors[idx], opacity: visible[key] ? 1 : 0.5 }}\n            onClick={(e) => handleVisible(key)}\n          >\n            {key}\n          </a>\n        ))}\n      </div>\n      <svg viewBox={`0 0 ${width} ${height + 60}`}>\n        <style>{`.small {color: 'red'} `}</style>\n\n        <XAxis />\n        <LabelsXAxis />\n        {/* <YAxis /> */}\n        <HorizontalGuides />\n        {points.map((series, idx) => {\n          if (visible[Object.keys(data.data)[idx]]) {\n            return series.map((point, idxline) => {\n              // <polyline\n              //   key={idx}\n              //   fill='none'\n              //   stroke={colors[idx]}\n              //   strokeWidth='3px'\n              //   strokeLinecap='round'\n              //   strokeDasharray='10 5'\n              //   points={points}\n              // />\n              return (\n                <line\n                  key={idxline}\n                  x1={point[0] + idx * 14}\n                  y1={point[1] + 25}\n                  x2={point[0] + idx * 14}\n                  y2={height + 25}\n                  stroke={colors[idx]}\n                  strokeWidth='9.5'\n                  strokeLinecap='round'\n                />\n              )\n            })\n          }\n          return null\n        })}\n      </svg>\n    </>\n  )\n}\n","import React from 'react'\nimport styles from './styles.module.css'\n// import Input from './Input'\n\n// Components\nexport { Input } from './Input'\nexport { Button } from './Button'\nexport { LineChart } from './LineChart'\nexport { BarChart } from './Barchart'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\n// export const Input = () => <div>Hola</div>\n"],"names":["Input","Button","type","children","LineChart","height","width","padding","data","labels","hourly","useState","tooltipVisible","setTooltipVisible","currentX","setCurrentX","div","useRef","initialState2","forEach","idx","visible","setVisible","colors","colorsFill","FONT_SIZE","maxX","Math","max","map","d","e","x","minX","min","maxValue","y","maxZeros","toFixed","toString","length","maxY","ceil","minValue","minZeros","abs","minY","floor","zeroY","points","singlePlot","element","join","polygonPoints","pointsCoords","label","xPointCoords","VerticalCurrentX","stroke","Axis","XAxis","HorizontalGuides","startX","endX","numberOfHorizontalGuides","Array","fill","_","index","yRatio","ratio","displayNumber","yCoordinate","fontSize","fontFamily","fontWeight","toPrecision","labelsXAxisHourly","hours","lastHour","lastHalf","lastX","currentHour","split","currentHalf","push","slice","LabelsXAxis","labelsPerHour","handleVisible","prevState","newState","Mark","coord","onMouseOver","onMouseLeave","Tooltips","sublabel","rectPos","marginBottom","color","opacity","event","rect","document","getElementById","getBoundingClientRect","coordX","clientX","curr","coords","filter","idxParent","quantity","BarChart","props","key","concat","Object","values","zeros","xValues","keys","deltaX","series","point","idxline","ExampleComponent","text","styles","test"],"mappings":"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"}